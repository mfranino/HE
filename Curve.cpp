//
// C++ Implementation: Curve
//
// Description: 
//
//
// Author: Iztok Zupet <iz@elsis.si>, (C) 2004
//
// Copyright: See COPYING file that comes with this distribution
//
//

extern "C" {
#include <avr/pgmspace.h>
}
#include "Defines.h"
#include "Nvr.h"
#include "Dmx.h"
#include "Curve.h"

//
// static class instance and members
//

Curve Curve::curve;

//
// RMS S krivulja
//
const unsigned char Curve::cPower[256] PROGMEM = {
    0,	3,	5,	7,	8,	10,	11,	12, 13, 14, 15, 16, 17, 18, 19, 20, 
    21, 22, 23, 24, 25, 25, 26, 27, 28, 29, 29, 30, 31, 32, 32, 33, 
    34, 35, 35, 36, 37, 37, 38, 39, 40, 40, 41, 42, 42, 43, 44, 44, 
    45, 46, 46, 47, 48, 48, 49, 50, 50, 51, 51, 52, 53, 53, 54, 55, 
    55, 56, 56, 57, 58, 58, 59, 60, 60, 61, 61, 62, 63, 63, 64, 64, 
    65, 66, 66, 67, 67, 68, 69, 69, 70, 70, 71, 71, 72, 73, 73, 74, 
    74, 75, 76, 76, 77, 77, 78, 79, 79, 80, 80, 81, 81, 82, 83, 83, 
    84, 84, 85, 86, 86, 87, 87, 88, 89, 89, 90, 90, 91, 92, 92, 93, 
	93,	94, 95, 95, 96, 96, 97, 98, 98, 99, 99, 100, 101, 101, 102, 102, 
    103,104, 104, 105, 106, 106, 107, 107, 108, 109, 109, 110, 111, 111, 112, 112, 
    113, 114, 114, 115, 116, 116, 117, 118, 118, 119, 120, 120, 121, 122, 122, 123, 
    124, 125, 125, 126, 127, 127, 128, 129, 129, 130, 131, 132, 132, 133, 134, 135, 
    135, 136, 137, 138, 139, 139, 140, 141, 142, 143, 143, 144, 145, 146, 147, 148, 
    149, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 
    164, 165, 166, 168, 169, 170, 171, 172, 174, 175, 176, 178, 179, 181, 182, 184, 
    186, 187, 189, 191, 193, 195, 197, 199, 202, 204, 208, 211, 215, 221, 228, 255
};
//
// linear
//
const unsigned char Curve::cElsis[256] PROGMEM = {
    0, 3, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 22, 
    23, 24, 25, 26, 28, 28, 30, 31, 32, 33, 34, 35, 36, 38, 38, 40, 
    41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 51, 52, 53, 55, 56, 56, 
    57, 59, 60, 61, 62, 63, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 
    74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 
    90, 91, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 102, 103, 104, 
    106, 107, 108, 109, 110, 110, 111, 112, 113, 115, 116, 116, 117, 118, 119, 120, 
    122, 122, 123, 124, 125, 126, 127, 128, 129, 130, 130, 131, 133, 134, 135, 135, 
    136, 138, 139, 139, 140, 141, 143, 143, 144, 145, 146, 147, 148, 149, 150, 151, 
    152, 153, 154, 155, 156, 156, 157, 159, 159, 160, 161, 163, 163, 164, 165, 166, 
    167, 168, 169, 170, 171, 171, 172, 174, 174, 175, 177, 177, 178, 179, 180, 181, 
    182, 183, 184, 184, 185, 187, 187, 188, 190, 190, 191, 193, 193, 194, 195, 196, 
    197, 198, 199, 200, 201, 202, 202, 203, 205, 205, 206, 207, 208, 209, 210, 211, 
    211, 212, 214, 214, 215, 216, 217, 219, 219, 220, 221, 222, 222, 223, 225, 225, 
    226, 227, 228, 230, 230, 231, 232, 233, 234, 235, 235, 236, 238, 238, 239, 240, 
    241, 242, 243, 243, 244, 246, 247, 248, 248, 249, 250, 251, 252, 253, 254, 255
};
//
//linear with preheat
//
const unsigned char Curve::cElsisPreheat[256] PROGMEM = {
    16, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
    30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45,
    45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,
    60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75,
    75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90,
    90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105,
    105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120,
    120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
    135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
    150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
    165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180,
    180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
    195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
    210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
    225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
    240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255
};
//
// fluo
//
const unsigned char Curve::cFluo[256] PROGMEM = {
    0, 34, 34, 35, 36, 37, 38, 39, 40, 40, 41, 42, 43, 44, 45, 46,
    47, 47, 48, 49, 50, 51, 52, 53, 54, 54, 55, 56, 57, 58, 59, 60,
    60, 61, 62, 63, 64, 65, 66, 67, 67, 68, 69, 70, 71, 72, 73, 74,
    74, 75, 76, 77, 78, 79, 80, 80, 81, 82, 83, 84, 85, 86, 87, 87,
    88, 89, 90, 91, 92, 93, 94, 94, 95, 96, 97, 98, 99, 100, 100, 101,
    102, 103, 104, 105, 106, 107, 107, 108, 109, 110, 111, 112, 113, 114, 114, 115,
    116, 117, 118, 119, 120, 121, 121, 122, 123, 124, 125, 126, 127, 127, 128, 129,
    130, 131, 132, 133, 134, 134, 135, 136, 137, 138, 139, 140, 141, 141, 142, 143,
    144, 145, 146, 147, 147, 148, 149, 150, 151, 152, 153, 154, 154, 155, 156, 157,
    158, 159, 160, 161, 161, 162, 163, 164, 165, 166, 167, 167, 168, 169, 170, 171,
    172, 173, 174, 174, 175, 176, 177, 178, 179, 180, 181, 181, 182, 183, 184, 185,
    186, 187, 188, 188, 189, 190, 191, 192, 193, 194, 194, 195, 196, 197, 198, 199,
    200, 201, 201, 202, 203, 204, 205, 206, 207, 208, 208, 209, 210, 211, 212, 213,
    214, 214, 215, 216, 217, 218, 219, 220, 221, 221, 222, 223, 224, 225, 226, 227,
    228, 228, 229, 230, 231, 232, 233, 234, 234, 235, 236, 237, 238, 239, 240, 241,
    241, 242, 243, 244, 245, 246, 247, 248, 248, 249, 250, 251, 252, 253, 254, 255
};
//
// direkt
//
const unsigned char Curve::cDirect[256] PROGMEM = {
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255 
};
const unsigned char Curve::out[MAXCURVE][256] PROGMEM = {
/*cElsis*/
{   0, 3, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 22,
    23, 24, 25, 26, 28, 28, 30, 31, 32, 33, 34, 35, 36, 38, 38, 40,
    41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 51, 52, 53, 55, 56, 56,
    57, 59, 60, 61, 62, 63, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73,
    74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
    90, 91, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 102, 103, 104,
    106, 107, 108, 109, 110, 110, 111, 112, 113, 115, 116, 116, 117, 118, 119, 120,
    122, 122, 123, 124, 125, 126, 127, 128, 129, 130, 130, 131, 133, 134, 135, 135,
    136, 138, 139, 139, 140, 141, 143, 143, 144, 145, 146, 147, 148, 149, 150, 151,
    152, 153, 154, 155, 156, 156, 157, 159, 159, 160, 161, 163, 163, 164, 165, 166,
    167, 168, 169, 170, 171, 171, 172, 174, 174, 175, 177, 177, 178, 179, 180, 181,
    182, 183, 184, 184, 185, 187, 187, 188, 190, 190, 191, 193, 193, 194, 195, 196,
    197, 198, 199, 200, 201, 202, 202, 203, 205, 205, 206, 207, 208, 209, 210, 211,
    211, 212, 214, 214, 215, 216, 217, 219, 219, 220, 221, 222, 222, 223, 225, 225,
    226, 227, 228, 230, 230, 231, 232, 233, 234, 235, 235, 236, 238, 238, 239, 240,
    241, 242, 243, 243, 244, 246, 247, 248, 248, 249, 250, 251, 252, 253, 254, 255},
/*cElsisPreaheat*/
{	16, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
    30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45,
    45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,
    60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75,
    75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90,
    90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105,
    105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120,
    120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
    135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
    150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
    165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180,
    180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
    195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
    210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
    225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
    240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255},
/*cFluo*/
{	0, 34, 34, 35, 36, 37, 38, 39, 40, 40, 41, 42, 43, 44, 45, 46,
    47, 47, 48, 49, 50, 51, 52, 53, 54, 54, 55, 56, 57, 58, 59, 60,
    60, 61, 62, 63, 64, 65, 66, 67, 67, 68, 69, 70, 71, 72, 73, 74,
    74, 75, 76, 77, 78, 79, 80, 80, 81, 82, 83, 84, 85, 86, 87, 87,
    88, 89, 90, 91, 92, 93, 94, 94, 95, 96, 97, 98, 99, 100, 100, 101,
    102, 103, 104, 105, 106, 107, 107, 108, 109, 110, 111, 112, 113, 114, 114, 115,
    116, 117, 118, 119, 120, 121, 121, 122, 123, 124, 125, 126, 127, 127, 128, 129,
    130, 131, 132, 133, 134, 134, 135, 136, 137, 138, 139, 140, 141, 141, 142, 143,
    144, 145, 146, 147, 147, 148, 149, 150, 151, 152, 153, 154, 154, 155, 156, 157,
    158, 159, 160, 161, 161, 162, 163, 164, 165, 166, 167, 167, 168, 169, 170, 171,
    172, 173, 174, 174, 175, 176, 177, 178, 179, 180, 181, 181, 182, 183, 184, 185,
    186, 187, 188, 188, 189, 190, 191, 192, 193, 194, 194, 195, 196, 197, 198, 199,
    200, 201, 201, 202, 203, 204, 205, 206, 207, 208, 208, 209, 210, 211, 212, 213,
    214, 214, 215, 216, 217, 218, 219, 220, 221, 221, 222, 223, 224, 225, 226, 227,
    228, 228, 229, 230, 231, 232, 233, 234, 234, 235, 236, 237, 238, 239, 240, 241,
    241, 242, 243, 244, 245, 246, 247, 248, 248, 249, 250, 251, 252, 253, 254, 255},
	/*cFluo*/
{	0, 34, 34, 35, 36, 37, 38, 39, 40, 40, 41, 42, 43, 44, 45, 46,
    47, 47, 48, 49, 50, 51, 52, 53, 54, 54, 55, 56, 57, 58, 59, 60,
    60, 61, 62, 63, 64, 65, 66, 67, 67, 68, 69, 70, 71, 72, 73, 74,
    74, 75, 76, 77, 78, 79, 80, 80, 81, 82, 83, 84, 85, 86, 87, 87,
    88, 89, 90, 91, 92, 93, 94, 94, 95, 96, 97, 98, 99, 100, 100, 101,
    102, 103, 104, 105, 106, 107, 107, 108, 109, 110, 111, 112, 113, 114, 114, 115,
    116, 117, 118, 119, 120, 121, 121, 122, 123, 124, 125, 126, 127, 127, 128, 129,
    130, 131, 132, 133, 134, 134, 135, 136, 137, 138, 139, 140, 141, 141, 142, 143,
    144, 145, 146, 147, 147, 148, 149, 150, 151, 152, 153, 154, 154, 155, 156, 157,
    158, 159, 160, 161, 161, 162, 163, 164, 165, 166, 167, 167, 168, 169, 170, 171,
    172, 173, 174, 174, 175, 176, 177, 178, 179, 180, 181, 181, 182, 183, 184, 185,
    186, 187, 188, 188, 189, 190, 191, 192, 193, 194, 194, 195, 196, 197, 198, 199,
    200, 201, 201, 202, 203, 204, 205, 206, 207, 208, 208, 209, 210, 211, 212, 213,
    214, 214, 215, 216, 217, 218, 219, 220, 221, 221, 222, 223, 224, 225, 226, 227,
    228, 228, 229, 230, 231, 232, 233, 234, 234, 235, 236, 237, 238, 239, 240, 241,
    241, 242, 243, 244, 245, 246, 247, 248, 248, 249, 250, 251, 252, 253, 254, 255},
/*cDirect	*/
{	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255 },		
};


//  char * const  Curve::outFuncTable[MAXCURVE] PROGMEM= {
// 	(char *)&Curve::cElsis[0],
// 	(char *)&Curve::cElsisPreheat[0],
// 	(char *)&Curve::cFluo[0],
// 	(char *)&Curve::cFluo[0],
// 	(char *)&Curve::cDirect[0] 
// 	};

	PGM_P  const Curve::outFuncTable[MAXCURVE] PROGMEM = {
	(char*)&Curve::cElsis[0],
	(char*)&Curve::cElsisPreheat[0],
	(char*)&Curve::cFluo[0],
	(char*)&Curve::cFluo[0],
	(char*)&Curve::cDirect[0]
	};

// const prog_char * outFuncTable[MAXCURVE] = {
// 	(prog_char *)&cRms[0],
// 	(prog_char *)&cRmsPreheat[0],
// 	(prog_char *)&cFluo[0],
// 	(prog_char *)&cFluo[0],
// 	(prog_char *)&cDirect[0]
// 	};



Curve::Curve()
{
}

// unsigned char Curve::getRms(unsigned char chn, unsigned char val)
// {
//     return ( pgm_read_byte( &(outFuncTable[Nvr::setup.outFunc[chn]][val] )));
// };
unsigned char Curve::getRms(unsigned char chn, unsigned char val)
{
	return ( pgm_read_byte( &(out[Nvr::setup.outFunc[chn]][val] )));
};
unsigned char Curve::getRmsP(unsigned char chn, unsigned char val)
{
	return (Nvr::setup.outFunc[chn]);
	};

unsigned char Curve::getPhaseAngle(unsigned char inVal)
{
    return (pgm_read_byte_near((unsigned int) &cPower[inVal]));
};

unsigned char Curve::test(unsigned char inVal)
{
    return (pgm_read_byte_near( (unsigned int)&cPower[inVal]));
};
//eof




